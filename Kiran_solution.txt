Q1 => (A): Get the nth number in the fibonacci sequence given n
JAVA Solution : 

class fibonacci
{
	static int fibo(int n)
	{
		int f[] = new int[n+2];
		int a;
		
		/* 0th and 1st number of the series are 0 and 1*/
		f[0] = 0;
		f[1] = 1;
		
		for (a = 2; a<= n; a++)
		{
			f[a] = f[a-1] + f[a-2];
		}
	
		return f[n];
	}
	
	public static void main (String args[])
	{
		int n = 9;
		System.out.println(fibo(n));
	}
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Q1 => (B):  given a number F, print out whether it's a fibonacci number and what the closest index n in the
fibonacci sequence is.

Solution : A number is Fibonacci if and only if one or both of (5*n2 + 4) or (5*n2 â€“ 4) is a perfect square.

// Java program to check if x is a perfect square

class GFG
{
	static boolean isPerfectSquare(int x)
	{
		int s = (int) Math.sqrt(x);
		return (s*s == x);
	}
	
	static boolean isFibonacci(int n)
	{
		return isPerfectSquare(5*n*n + 4) ||
			isPerfectSquare(5*n*n - 4);
	}

	public static void main(String[] args)
	{
		for (int a = 1; a<= 10; a++)
			System.out.println(isFibonacci(a) ? A + " is a Fibonacci Number" :
												a + " is a not Fibonacci Number");
	}
}



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

